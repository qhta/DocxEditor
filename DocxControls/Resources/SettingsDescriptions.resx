<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveWritingStyle" xml:space="preserve">
    <value>Specifies information about the parameters of the grammar checking which was performed on the contents of the current WordprocessingML document. &lt;p/&gt;Note: This information can be used as desired by applications; for example, to determine if the current grammar checking state, specified by the proofState element (§17.15.1.65) is sufficient.</value>
  </data>
  <data name="AlignBorderAndEdges" xml:space="preserve">
    <value>Specifies that paragraph borders specified using the pBdr element (§17.3.1.24) and table borders using the tblBorders element (§17.4.40) shall be adjusted to align with extents of the page border defined using the pgBorders element (§17.6.10) if the spacing between these borders is less than or equal to 10.5 points (one character width) or less from the page border. The presence of this setting shall ensure there are no gaps of one character width or less between adjoining page and paragraph/table borders, as borders which are perfectly aligning shall not be displayed in favor of the intervening page border.</value>
  </data>
  <data name="AlwaysMergeEmptyNamespace" xml:space="preserve">
    <value>Specifies whether custom XML markup specified via the customXml element which has no associated namespace shall be treated as an error and moved into a special error namespace (for the purposes of XML schema validation) when the document is opened. If this element is turned on, when an application determines that the current XML markup is in the empty namespace, those elements shall not automatically be moved into an error namespace.</value>
  </data>
  <data name="AlwaysShowPlaceholderText" xml:space="preserve">
    <value>Specifies that each custom XML element specified using the customXml element within this document shall always show some form of in-document placeholder text presentation when it contains no run content. If the placeholder element (§17.5.2.25) is present in the custom XML element's properties, then this is the placeholder text displayed and this effect has no effect. If the placeholder element is omitted, then the application shall use the name of the element to generate default placeholder text in its place.</value>
  </data>
  <data name="AttachedSchema" xml:space="preserve">
    <value>Specifies that the custom XML schema whose target namespace matches the value specified in the val attribute should be associated with this document when it is loaded, if such a schema is available to the hosting application. Applications can also load and utilize any additional schemas as well as those explicitly mentioned here. &lt;p/&gt;Note: These custom XML schemas can then be used to validate the structure of the custom XML markup in the document, etc.</value>
  </data>
  <data name="AttachedTemplate" xml:space="preserve">
    <value>Specifies the location of a document template which shall be attached to the current WordprocessingML document if it is accessible and of a format supported by an application. Specifically, this element's val attribute shall contain the file path of the associated document template.</value>
  </data>
  <data name="AutoFormatOverride" xml:space="preserve">
    <value>Specifies whether formatting automatically applied by an application (i.e. not explicitly applied by a use or an application) shall be allowed to override formatting protection enabled via the formatting attribute on the documentProtection element (§17.15.1.9) when those formatting operations would add formatting which has been explicitly disabled. &lt;p/&gt;Example: Automatically adding superscript to the st in the string 1st.</value>
  </data>
  <data name="AutoHyphenation" xml:space="preserve">
    <value>Specifies whether the content of a given WordprocessingML document should automatically be hyphenated by the hosting application before it is displayed, if the application supports this functionality.</value>
  </data>
  <data name="BookFoldPrinting" xml:space="preserve">
    <value>Specifies if the contents of a given WordprocessingML document should be printed as signatures. Signatures are printed sheets, which depict several pages of a document that are folded and bound with other signatures to form a booklet, a set of which can be bound together to form a book like publication. Specifically, this element specifies that each page in a given WordprocessingML document should be oriented in a landscape fashion, divided in half vertically with two left margins emanating from the bisector of the page, and two right margins instantiated at the left and right side of each page.</value>
  </data>
  <data name="BookFoldPrintingSheets" xml:space="preserve">
    <value>This element shall be used in conjunction with the bookFoldPrinting (§17.15.1.11) and bookFoldRevPrinting (§17.15.1.13) elements to specify the number of pages to be included in each booklet when printing a series of signatures. Signatures are printed sheets, which depict several pages of a document that are to be folded and bound with other signatures to form a booklet. Booklets can be bound together to form a book like publication.</value>
  </data>
  <data name="BookFoldReversePrinting" xml:space="preserve">
    <value>Shall be used in conjunction with the bookFoldPrinting (§17.15.1.11) and bookFoldRevPrinting (§17.15.1.13) elements to specify the number of pages to be included in each booklet when printing a series of signatures. Signatures are printed sheets, which depict several pages of a document that are to be folded and bound with other signatures to form a booklet. Booklets can be bound together to form a book like publication.</value>
  </data>
  <data name="BordersDoNotSurroundFooter" xml:space="preserve">
    <value>Specifies that a given WordprocessingML document’s page border specified using the pgBorders element (§17.6.10) should not surround contents of the footer.</value>
  </data>
  <data name="BordersDoNotSurroundHeader" xml:space="preserve">
    <value>Specifies that a given WordprocessingML document’s page border specified using the pgBorders element (§17.6.10) should not surround contents of the header.</value>
  </data>
  <data name="Captions" xml:space="preserve">
    <value>Specifies the presence of information about captionsin a given WordprocessingML document. This information is divided into two components:&lt;p/&gt;• The child element caption defines the format for a single type of caption to be automatically added to the document.&lt;p/&gt;• The child element autoCaptions defines the types of objects to which a caption format shall automatically be applied.&lt;p/&gt;This information should be used to determine the captions which are automatically added to objects when they are inserted into a WordprocessingML document. &lt;p/&gt;Note: This setting is typically ignored unless it is specified in an application's default template.</value>
  </data>
  <data name="CharacterSpacingControl" xml:space="preserve">
    <value>Specifies how full-width characters in the current WordprocessingML document should be compressed to remove additional whitespace when the contents of this document are displayed, specifically by specifying the set(s) of characters which can be compressed to remove additional whitespace. &lt;p/&gt;Note: The behavior of this element is functionally identical to the text-justify-trim property.</value>
  </data>
  <data name="ChartTrackingRefBased" xml:space="preserve">
    <value>Specifies how the datapoint properties and datalabels in all charts in this document behave. The meaning of the setting is as follows:&lt;p/&gt;True Datapoint properties and datalabels in all charts in this document follow their reference.&lt;p/&gt;False Datapoint properties and datalabels in all charts in this document follow their position in the chart.</value>
  </data>
  <data name="ClickAndTypeStyle" xml:space="preserve">
    <value>Specifies the paragraph style, specified using the style element, which shall be applied to paragraphs which are automatically created when text is inserted into a WordprocessingML document in an area of the document that has no other style associated with it. This style is referenced via the val attribute, which stores the style ID of the style (stored in the styleId attribute on the style definition).</value>
  </data>
  <data name="ColorSchemeMapping" xml:space="preserve">
    <value>Specifies the theme color, stored in the document's Theme part to which the value of this theme color shall be mapped. This mapping enables multiple theme colors to be chained together.</value>
  </data>
  <data name="Compatibility" xml:space="preserve">
    <value>Specifies a set of optional compatibility options for the current document.</value>
  </data>
  <data name="ConflictMode" xml:space="preserve">
    <value>When true, specifies that the user was resolving conflicting edits when the document was saved.</value>
  </data>
  <data name="ConsecutiveHyphenLimit" xml:space="preserve">
    <value>Specifies the maximum number of consecutive lines of text that can end with a hyphen when the contents of this document are displayed. Once this limit has been reached, the following line shall not be hyphenated regardless of whether or not it meets the criteria needed for hyphenation.</value>
  </data>
  <data name="DecimalSymbol" xml:space="preserve">
    <value>Specifies the character that shall be interpreted as the radix point when evaluating the contents of all fields in the current document.&lt;p/&gt;Rationale: When evaluating field instructions based on the contents of the current document, it is necessary to know the character which must be treated as the radix point in order to prevent changes to the calculation of the same field instructions based on the current user's locale. This element stores the radix point which must be used to evaluate fields in the contents of this document, irrespective of the locale of the application loading the file.</value>
  </data>
  <data name="DefaultImageDpi" xml:space="preserve">
    <value>Specifies the resolution in dots per inch (DPI) at which images in the document will be saved.&lt;p/&gt;This setting is ignored by images that have dots per inch (DPI) specified by useLocalDpi. This setting is also ignored when doNotAutoCompressPictures is set to "true".</value>
  </data>
  <data name="DefaultTableStyle" xml:space="preserve">
    <value>Specifies the table style which shall automatically be applied to the table properties of tables added to this document by an application. Note that it does not change the table style applied to tables which do not reference a style, instead, it automatically applies the style to that table via the tblStyle element (§17.4.63). This link is made by referencing the styleId attribute value of the table style which shall be used to format newly inserted tables.</value>
  </data>
  <data name="DefaultTabStop" xml:space="preserve">
    <value>Specifies the value which shall be used as the multiplier to generate automatic tab stops in this document. Automatic tab stops refer to the tab stop locations which occur after all custom tab stops in the current paragraph have been surpassed.</value>
  </data>
  <data name="DiscardImageEditingData" xml:space="preserve">
    <value>When true, specifies that the cropped-out areas of the images are not to be saved. Rather, the images saved are the results of applying imgProps on the original images. &lt;p/&gt;If this element is absent or if it has a value of "false", the cropped-out areas of images are saved.</value>
  </data>
  <data name="DisplayBackgroundShape" xml:space="preserve">
    <value>Specifies whether the images and colors defined in the document's background using the background element (§17.2.1) shall be displayed when the document is displayed in print layout view as specified in the view element (§17.15.1.92).</value>
  </data>
  <data name="DisplayHorizontalDrawingGrid" xml:space="preserve">
    <value>Specifies the number of horizontal grid units defined using the drawingGridHorizontalSpacing element (§17.15.1.45) which shall be allowed between subsequent visible horizontal drawing grid lines in this document, if gridlines are being shown. &lt;p/&gt;Note: The display of gridlines is an application-level setting not specified in IEEE/IEC 29500. The drawing grid is a grid which can be used by applications to help position floating objects in the document.</value>
  </data>
  <data name="DisplayVerticalDrawingGrid" xml:space="preserve">
    <value>Specifies the number of vertical grid units defined using the drawingGridVerticalSpacing element (§17.15.1.47) which shall be allowed between subsequent vertical gridlines in this document, if gridlines are being shown. &lt;p/&gt;Note: The display of gridlines is an application-level setting not specified in IEEE/IEC 29500. The drawing grid is a grid which can be used by applications to help position floating objects in the document.</value>
  </data>
  <data name="DocumentId" xml:space="preserve">
    <value>Specifies an arbitrary identifier for the context of the paragraph identifiers in the document. Values MUST be greater than 0 and less than 0x80000000.</value>
  </data>
  <data name="DocumentProtection" xml:space="preserve">
    <value>Specifies the set of document protection restrictions which have been applied to the contents of a WordprocessingML document. These restrictions should be enforced by applications editing this document when the enforcement attribute is turned on, and ignored (but persisted) otherwise. Document protection is a set of restrictions used to prevent unintentional changes to all or part of a WordprocessingML document. &lt;p/&gt;Note: This protection does not encrypt the document, and malicious applications might circumvent its use. This protection is not intended as a security feature.</value>
  </data>
  <data name="DocumentType" xml:space="preserve">
    <value>Specifies the classification of a given WordprocessingML document.&lt;p/&gt;Note: This element can be used by hosting applications to facilitate customized user interface and/or automatic formatting behaviors based on the 'type' of a given WordprocessingML document.</value>
  </data>
  <data name="DocumentVariables" xml:space="preserve">
    <value>Specifies the presence of documentvariables in a WordprocessingML. A document variable is a storage location for arbitrary customer data in name/value pairs that is persisted in a given WordprocessingML document.</value>
  </data>
  <data name="DoNotAutoCompressPictures" xml:space="preserve">
    <value>Specifies that pictures in this document shall not automatically be compressed when saving the document in order to reduce the overall size of the resulting WordprocessingML document.</value>
  </data>
  <data name="DoNotDemarcateInvalidXml" xml:space="preserve">
    <value>Specifies whether a visual cue should be displayed around content contained in a WordprocessingML document which is contained with custom XML markup specified via the customXml element when an application determines that the current XML markup (or its contents) violate the constraints of the attached XML schema(s).</value>
  </data>
  <data name="DoNotDisplayPageBoundaries" xml:space="preserve">
    <value>Specifies whether applications displaying this document should display the contents of the header and footer when displaying the document in print layout view (§17.15.1.92) or should collapse those areas as well as the whitespace on all displayed pages so that the text extents are directly following one another. &lt;p/&gt;Rationale: Collapsing the ends of pages makes it easier to read the contents of the document, since the text flows between pages without whitespace, while maintaining the WYSIWYG functionality of print layout view for the document's main content.</value>
  </data>
  <data name="DoNotHyphenateCaps" xml:space="preserve">
    <value>Specifies whether or not words comprised of all capital letters shall be hyphenated within a given document when automatic hyphenation is specified via the autoHyphenation element (§17.15.1.10).</value>
  </data>
  <data name="DoNotIncludeSubdocsInStats" xml:space="preserve">
    <value>Specifies if document content contained in text boxes, footnotes, and endnotes shall be excluded when an application calculates a given document’s statistics when these values are calculated and/or displayed by an application.&lt;p/&gt;Note: Some examples of document statistics that an application might chose to calculate are: number of words, number of characters, number of paragraphs, number of pages, number of lines, and so on.</value>
  </data>
  <data name="DoNotShadeFormData" xml:space="preserve">
    <value>Specifies whether a visual cue should be displayed around form fields contained in a WordprocessingML document specified via the FORMTEXT, FORMCHECKBOX, or FORMDROPDOWN fields.</value>
  </data>
  <data name="DoNotTrackFormatting" xml:space="preserve">
    <value>Specifies that applications shall not track revisions made to the formatting of this WordprocessingML document when the trackRevisions element (§17.15.1.89) is turned on.</value>
  </data>
  <data name="DoNotTrackMoves" xml:space="preserve">
    <value>Specifies that applications shall not track revisions made to this WordprocessingML document as moves when the trackRevisions element (§17.15.1.89) is turned on, even when that syntax is appropriate. Instead, applications should use a standard insertion and deletion annotation syntax. Existing moves shall not be modified. &lt;p/&gt;Rationale: This element is provided to enable interoperability with earlier word processing applications which do not understand moves.</value>
  </data>
  <data name="DoNotUseMarginsForDrawingGridOrigin" xml:space="preserve">
    <value>Specifies that the top-left corner of the page shall not be used as the origin for the drawing grid. The drawing grid is a virtual grid which can be used by applications to specify where drawing objects shall be positioned on a page when inserted (i.e. to ensure objects are aligned, etc.). If this element is present the grid shall start at the top-left edge of the page and not the text extents.</value>
  </data>
  <data name="DoNotValidateAgainstSchema" xml:space="preserve">
    <value>Specifies that applications shall not validate the custom XML markup in this document against the applicable custom XML schema(s), even when those schemas are available. The application should silently behave as if it was unable to provide this functionality.</value>
  </data>
  <data name="DrawingGridHorizontalOrigin" xml:space="preserve">
    <value>Specifies the distance from of the left edge of the page which shall be used as the origin for the horizontal gridlines used by the drawing grid. The drawing grid is a virtual grid which might be used by applications to specify where drawing objects shall be positioned on a page when inserted (i.e. to ensure objects are aligned, etc.). Since the grid always covers the entire page when the doNotUseMarginsForDrawingGridOrigin element (§17.15.1.42) is specified, this element shall only affect the starting edge of the first horizontal gridline displayed (i.e. it only adjusts the grid by the modulus of the value against the width of one grid unit).</value>
  </data>
  <data name="DrawingGridHorizontalSpacing" xml:space="preserve">
    <value>Specifies the width of horizontal grid units in this document. The drawing grid is a grid which can be used by applications to help position floating objects in the document.&lt;p/&gt;If this element is omitted, then each horizontal grid unit shall be 180 twentieths of a point (0.125") in width.</value>
  </data>
  <data name="DrawingGridVerticalOrigin" xml:space="preserve">
    <value>Specifies the distance from of the top edge of the page which shall be used as the origin for the vertical gridlines used by the drawing grid. The drawing grid is a virtual grid which can be used by applications to specify where drawing objects shall be positioned on a page when inserted (i.e. to ensure objects are aligned, etc.). Since the grid always covers the entire page when the doNotUseMarginsForDrawingGridOrigin element (§17.15.1.42) is specified, this element shall only affect the starting edge of the first vertical gridline displayed (i.e. it only adjusts the grid by the modulus of the value against the width of one grid unit).</value>
  </data>
  <data name="DrawingGridVerticalSpacing" xml:space="preserve">
    <value>Specifies the width of vertical grid units in this document. The drawing grid is a grid which can be used by applications to help position floating objects in the document.&lt;p/&gt;If this element is omitted, then each vertical grid unit shall be 180 twentieths of a point (0.125") in width.</value>
  </data>
  <data name="EmbedSystemFonts" xml:space="preserve">
    <value>Specifies that applications shall embed common system fonts when they are in use and font embedding is enabled for this document using the embedTrueTypeFonts element (§17.8.3.8). Common system fonts refer to a set of fonts which are typically always present on a machine, and are not defined by IEEE/IEC 29500.</value>
  </data>
  <data name="EmbedTrueTypeFonts" xml:space="preserve">
    <value>Specifies that applications shall embed the fonts in use in this document when it is saved. These fonts shall be embedded subject to the algorithm specified in §17.8.1.</value>
  </data>
  <data name="EndnoteDocumentWideProperties" xml:space="preserve">
    <value>Specifies the endnote properties for the current document. Each of these properties are stored as a child element within the endnotePr element.&lt;p/&gt;These properties can be overridden for a specific section via the section-wide endnotePr element (§17.11.5).</value>
  </data>
  <data name="EvenAndOddHeaders" xml:space="preserve">
    <value>Specifies whether sections in this document shall have different headers and footers for even and odd pages (an odd page header/footer and an even page header/footer).&lt;p/&gt;If the val attribute is set to true, then each section in the document shall use an odd page header for all odd numbered pages in the section, and an even page header for all even numbered pages in the section (counting each page in the section starting from one, regardless of the page numbering settings for the section). If the val attribute is set to false, then all pages in a section shall use the odd page header.&lt;p/&gt;This setting does not affect the presence of a first page header on each section, which is specified using the titlePg element (§17.10.6). If a first page header is specified, then all subsequent pages shall have this setting applied, including the first page in the odd/even page count.&lt;p/&gt;If this element is set to false and an even page header is specified , then it shall be ignored and only the odd page header shall be displayed. Conversely, if this element is set to true and either header type is omitted for a given section, then a blank header shall be created as needed (another header type shall not be used in its place).</value>
  </data>
  <data name="FootnoteDocumentWideProperties" xml:space="preserve">
    <value>Specifies the footnote properties for this document. Each property is stored as a unique element within the footnotePr element.&lt;p/&gt;These properties can be overridden for a specific section via the section-wide footnotePr element (§17.11.11).</value>
  </data>
  <data name="ForceUpgrade" xml:space="preserve">
    <value>Specifies that the contents of this document can be upgraded and that the resulting document shall not have its functionality limited to only those functions compatible with earlier word processing applications. The only actions required as part of upgrading the document are:&lt;p/&gt;• The removal of this element. If an application does not know how to upgrade a document, this element should be ignored and persisted.&lt;p/&gt;• The removal of all compatibility options (§17.15.1.21) on the document which maintain compatibility with previous word processing applications. The compatibility settings which simply affect a given behavior shall not be turned off.&lt;p/&gt;Note: The remaining operations which must be performed as part of upgrading the document are application-defined and outside the scope of IEEE/IEC 29500.</value>
  </data>
  <data name="FormsDesign" xml:space="preserve">
    <value>Specifies that the document was last saved while the placeholder text of all structured document tags in this document were being edited. This means that the placeholder text currently displayed in all structured document tags which are displaying the showingPlcHdr element (§17.5.2.39) shall be committed to the corresponding glossary document entry as specified using the docPart element (§17.12.5) when this document is opened, in order to ensure that the most recent placeholder text is stored in the glossary document entry. If the current placeholder text cannot be saved as a glossary document entry, then it should be modified as needed before saving.</value>
  </data>
  <data name="GutterAtTop" xml:space="preserve">
    <value>Specifies that a given WordprocessingML document’s gutter shall be positioned at the top of the document’s pages when the document is displayed. A gutter is the white space formed by the inner margins of two pages facing one another; such as the white space between the text on pages of a book when the book is opened.&lt;p/&gt;If this element is omitted, then the gutter shall not be positioned at the top of the page. If the mirrorMargins (§17.15.1.57), bookFoldPrinting (§17.15.1.11), bookFoldRevPrinting (§17.15.1.13), or printTwoOnOne (§17.15.1.64) elements are used within a given document, the gutterAtTop element shall not be used. Rather, the gutter shall be positioned automatically as necessary to enable the printing and page layout capabilities of these settings.</value>
  </data>
  <data name="HeaderShapeDefaults" xml:space="preserve">
    <value>Specifies the default parameters for object using the VML syntax (§14.1) inserted in the header and footer of a WordprocessingML document. The definition and semantics of these parameters is described in the VML - Office Drawing subclause (§14.2) of IEEE/IEC 29500.</value>
  </data>
  <data name="HideGrammaticalErrors" xml:space="preserve">
    <value>Specifies whether a visual cue should be displayed around run content contained in a WordprocessingML document which has been flagged as a possible grammatical error using the proofErr element (§17.13.8.1) or via the application's own grammar engine.</value>
  </data>
  <data name="HideSpellingErrors" xml:space="preserve">
    <value>Specifies whether a visual cue should be displayed around run content contained in a WordprocessingML document which has been flagged as a possible spelling error using the proofErr element (§17.13.8.1) or via the application's own spelling engine.</value>
  </data>
  <data name="HyphenationZone" xml:space="preserve">
    <value>Specifies the hyphenation zone which shall be used when automatically or manually hyphenating the contents of this document. The hyphenation zone is the amount of whitespace which can be left at the end of a line (or added to justified lines) before hyphenation should be attempted on the next word in the document (in order to reduce the amount of whitespace on the line). A smaller hyphenation zone should reduce the raggedness of the right edge of a given document's body text, as more words is hyphenated. Conversely, a larger hyphenation zone should increase the raggedness of the right edge of a given document's text, as fewer words is hyphenated.&lt;p/&gt;If this element is omitted, then a default hyphenation zone of 360 twentieths of a point (0.25") shall be applied when performing hyphenation on this document.</value>
  </data>
  <data name="IgnoreMixedContent" xml:space="preserve">
    <value>Specifies that applications should ignore all text content which is not contained within a leaf custom XML markup element when validating the contents of the custom XML markup in this document against one or more attached custom XML schema(s). A leaf element is a custom XML element which has no child custom XML elements (it is a leaf in the custom XML tree).</value>
  </data>
  <data name="LinkStyles" xml:space="preserve">
    <value>Specifies that styles in the given document shall be updated to match the styles in the attached template specified using the attachedTemplate element (§17.15.1.6) when the document is opened by a hosting application. This setting enables the styles contained in documents with attached templates to stay synchronized with the styles used in the attached template.</value>
  </data>
  <data name="ListSeparator" xml:space="preserve">
    <value>Specifies the character that shall be interpreted as a list item separator when evaluating the contents of all fields in the current document.&lt;p/&gt;Rationale: When evaluating field instructions based on the contents of the current document, it is necessary to know the character which must be treated as the list separator in order to prevent changes to the calculation of the same field instructions based on the current user's locale. This element stores the list separator which must be used to evaluate fields in the contents of this document, irrespective of the locale of the application loading the file.</value>
  </data>
  <data name="MailMerge" xml:space="preserve">
    <value>Specifies all of the mail merge information for a document that has been connected to an external data source as part of a mail merge operation.&lt;p/&gt;The document which contains this mail merge data can be of one of two types:&lt;p/&gt;• A source document, the document which contains all of the information for the mail merge, and is used in conjunction with an application to connect to an external data source and create one document for each record in that data source.&lt;p/&gt;• A merged document, a document which contains all of the information for the mail merge as well as a reference to a single specific record which shall be used to populate the values of all of the merge fields in that document.&lt;p/&gt;The information in this element shall contain all data needed to connect to a data source and populate any merge fields in the document with data from that data source.</value>
  </data>
  <data name="MathProperties" xml:space="preserve">
    <value>Specifies the document-level properties for all math in the document.</value>
  </data>
  <data name="MirrorMargins" xml:space="preserve">
    <value>Specifies that the left and right margins defined in the section properties shall be swapped on facing pages.&lt;p/&gt;Guidance: This setting is generally used when printing on both sides of pages and binding them like a book.</value>
  </data>
  <data name="NoLineBreaksAfterKinsoku" xml:space="preserve">
    <value>Specifies the set of characters which shall be restricted from ending a line for runs of text which shall be subject to custom line breaking logic using the kinsoku element (§17.3.1.16) when the contents of the document are displayed. This constraint shall only apply to text which has been flagged in the language of this rule via the lang element (§17.3.2.20) or automatic detection methods outside the scope of IEEE/IEC 29500.</value>
  </data>
  <data name="NoLineBreaksBeforeKinsoku" xml:space="preserve">
    <value>Specifies the set of characters which shall be restricted from beginning a new line for runs of text which shall be subject to custom line breaking logic using the kinsoku element (§17.3.1.16) when the contents of the document are displayed. This constraint shall only apply to text which has been flagged in the language of this rule via the lang element (§17.3.2.20) or automatic detection methods outside the scope of IEEE/IEC 29500.</value>
  </data>
  <data name="NoPunctuationKerning" xml:space="preserve">
    <value>Specifies that punctuation characters shall not be kerned in the current document when kerning is enabled on a run using the kern element (§17.3.2.19). Kerning refers to a process by which a hosting application shall reduce the spacing of adjacent characters and/or punctuation to improve the visual appearance of text. Well kerned text has a similar amount of blank space between each pair of characters and/or each set of a character and punctuation symbol. When kerning is enabled, Latin text shall always be kerned, and this option shall control whether punctuation characters are also kerned.</value>
  </data>
  <data name="PersistentDocumentId" xml:space="preserve">
    <value>Specifies a unique identifier for a set of documents derived from a common source. The possible values for this attribute are defined by the ST_Guid simple type</value>
  </data>
  <data name="PrintFormsData" xml:space="preserve">
    <value>Specifies that printing the contents of this document shall only print the contents of WordprocessingML form fields defined using the FORMTEXT, FORMCHECKBOX, and FORMDROPDOWN field codes in their current locations on the page - all other document contents shall be suppressed.&lt;p/&gt;Rationale: This setting is typically used to allow duplication of paper forms in electronic WordprocessingML document form, allowing the resulting online document to be printed into the correct locations on the existing paper form.</value>
  </data>
  <data name="PrintFractionalCharacterWidth" xml:space="preserve">
    <value>Specifies the contents of this document shall be printed with fractional character widths. Fractional character widths exist when the spacing between characters is not constant (i.e. a proportional font face is used).&lt;p/&gt;Note: Fractional character widths are generally used in conjunction with large font sizes to prevent characters from running together or having too much space between one another.</value>
  </data>
  <data name="PrintPostScriptOverText" xml:space="preserve">
    <value>Specifies that the PostScript codes specified in WordprocessingML documents containing PRINT fields shall be included in foreground (on the same Z-order as text) with the data printed in the contents of a given WordprocessingML document.&lt;p/&gt;Note: This setting is maintained to ensure compatibility of legacy word processing documents. The PRINT field should not be used in lieu of newer technologies in IEEE/IEC 29500.</value>
  </data>
  <data name="PrintTwoOnOne" xml:space="preserve">
    <value>Specifies whether two pages should be printed on one sheet of paper when this document is printed. Specifically, this element specifies that each page displayed for the contents in a given WordprocessingML document should be the page size specified in the section settings divided in half with two top margins originating from the bisector of the page, and bottom margins instantiated at the top and bottom of each page.</value>
  </data>
  <data name="ProofState" xml:space="preserve">
    <value>Specifies if the grammar and spell checking engines of the last application to process this document completed checking the grammar and spelling of a the document before the document was last saved. Applications which modify the document contents without checking spelling or grammar should reset these states as needed.&lt;p/&gt;Note: If this element specifies that an application's grammar and spell checking engines completed checking the grammar and spelling of the document when the document was last saved, then subsequent applications might elect to not run their grammar and spell checking engines when the given WordprocessingML document is loaded.&lt;p/&gt;This might increase the speed with which the hosting application loads the file, and does not compromise the state of the grammar or spell checking of the document, as all errors have already been found and flagged with the proofErr element (§17.13.8.1) as the document has not been edited, only loaded, since it was last saved.</value>
  </data>
  <data name="ReadModeInkLockDown" xml:space="preserve">
    <value>Specifies the exact set of page and text sizing parameters which shall be used to display the contents of a WordprocessingML document. &lt;p/&gt;Rationale: This setting is typically used for documents that have been annotated using ink. This setting freezes the document's presentation such that the ink annotations must exist at the same position of the WordprocessingML document irrespective of the monitor on which the WordprocessingML document is rendered. &lt;p/&gt;This element shall only affect the display of WordprocessingML documents as follows:&lt;p/&gt;• When the actualPage attribute is specified with a value of true, the given WordprocessingML document's pages shall be rendered as they would normally be displayed. The resulting pages can have their magnification setting changed as desired. All other attributes shall be ignored.&lt;p/&gt;• When the actualPage attribute is specified with a value of false, the given WordprocessingML document's pages shall be rendered as virtual pages when loaded by a conforming hosting application irrespective of the given WordprocessingML document's view (§17.15.1.92). Virtual pages are pages with no correlation with the printed layout of a given WordprocessingML document that have been scaled by a conforming hosting application to improve the readability of a given WordprocessingML document when it is displayed. Specifically, the w and h attributes specify the width and height of the virtual pages, and the fontSz attribute specifies the scaling to be applied to text within the given WordprocessingML document.</value>
  </data>
  <data name="RemoveDateAndTime" xml:space="preserve">
    <value>Specifies that the date and time information shall be removed from all annotations which are present in the current document when it is saved. Annotations store this information in the date attribute on the annotation's XML element.</value>
  </data>
  <data name="RemovePersonalInformation" xml:space="preserve">
    <value>Specifies that hosting applications shall remove all personal information of document authors upon saving a given WordprocessingML document. The definition and extent of personal information is not defined by IEEE/IEC 29500.</value>
  </data>
  <data name="RevisionView" xml:space="preserve">
    <value>Specifies which forms of annotations shall be visible for a WordprocessingML document when it is displayed. This setting shall not affect whether annotations are added or persisted, it shall only affect the display of the annotations which exist in the document's contents (persisted or in memory).</value>
  </data>
  <data name="Rsids" xml:space="preserve">
    <value>Specifies the set of revision save ID values for the current document. Revision save ID values refer to four digit hexadecimal values which uniquely identify an editing session in the life of the current document. An editing session is the period of time between two subsequent save operations by an application.&lt;p/&gt;Guidance: The set of revision save IDs stored with a document only supplies information about the editing session in which document components were last saved, which can be used by applications in any manner desired.</value>
  </data>
  <data name="SaveFormsData" xml:space="preserve">
    <value>Specifies that saving the contents of this document shall only save the contents of WordprocessingML form fields defined using the FORMTEXT, FORMCHECKBOX, and FORMDROPDOWN field codes in a comma-delimited text format which does not conform to IEEE/IEC 29500 (i.e. it is a one-way export from a WordprocessingML document).&lt;p/&gt;Rationale: This setting is typically used to allow duplication of paper forms in electronic WordprocessingML document form, allowing the resulting content to be extracted as a comma-delimited text file.</value>
  </data>
  <data name="SaveInvalidXml" xml:space="preserve">
    <value>Specifies that this document should be capable of being saved into a format consisting of a single XML file (not defined by IEEE/IEC 29500) when its contents are invalid based XML schema validation of the custom XML markup contained in the document. This setting has no effect on documents that do not contain custom XML markup, or that do contain custom XML markup but do not have a schema attached. &lt;p/&gt;Guidance: Because this setting specifies behavior when saving to an alternative file format not defined by IEEE/IEC 29500, this behavior is optional. &lt;p/&gt;If this element is omitted, then applications should not allow this document to be saved into a single XML file when its contents are invalid based on the custom XML markup contained in the document. If the doNotValidateAgainstSchema element (§17.15.1.43) is set, then the XML is never "invalid" and this property is ignored.</value>
  </data>
  <data name="SavePreviewPicture" xml:space="preserve">
    <value>Specifies if a document's Thumbnail part should be generated for the contents of the first page of this document when saved by application which support document thumbnail generation.&lt;p/&gt;If this element is omitted, then applications can choose to save a thumbnail, however, that behavior is not required. If this element is specified, a thumbnail shall be produced if that functionality is supported.</value>
  </data>
  <data name="SaveSubsetFonts" xml:space="preserve">
    <value>Specifies that applications shall subset fonts when font embedding is enabled for this document using the embedTrueTypeFonts element (§17.8.3.8). Subsetting is a mechanism by which only the glyphs used in the contents of this WordprocessingML document are stored in an embedded font, in order to prevent the file from becoming unnecessarily large from the use of a small number of glyphs from a large embedded font.&lt;p/&gt;If this element is omitted, then the set of fonts should not be subsetted in the current document when font embedded is turned on. If the embedTrueTypeFonts element is omitted or false, then this setting has no effect.</value>
  </data>
  <data name="SaveThroughXslt" xml:space="preserve">
    <value>Specifies the location of a custom XSL transform which shall be used when this document is saved as a single XML file (in a format not defined by IEEE/IEC 29500). &lt;p/&gt;Guidance: Because this setting specifies behavior when saving to an alternative file format not defined by IEEE/IEC 29500, this behavior is optional.</value>
  </data>
  <data name="SaveXmlDataOnly" xml:space="preserve">
    <value>Specifies that the contents of this document shall be saved as an XML file containing only the custom XML markup in this document in its regular form. The resulting document does not conform to IEEE/IEC 29500 (i.e. this is an export-only save option for a WordprocessingML document).&lt;p/&gt;Rationale: This setting is typically used to extract custom XML markup from a WordprocessingML document for further processing by XML-enabled applications.</value>
  </data>
  <data name="SchemaLibrary" xml:space="preserve">
    <value>Specifies the set of XML namespaces which have been associated with the contents of the custom XML markup within the current Office Open XML document. Each unique namespace which is referenced within the document can be referenced within this element by a single schema element, regardless of the number of constituent XML schemas which comprise that namespace.</value>
  </data>
  <data name="ShapeDefaults" xml:space="preserve">
    <value>Specifies the default parameters for object using the VML syntax (§14.1) inserted in the body (the main document story, comments, footnotes, and endnotes) of the WordprocessingML document. The definition and semantics of these parameters is described in the VML - Office Drawing subclause (§14.2) of IEEE/IEC 29500.</value>
  </data>
  <data name="ShowEnvelope" xml:space="preserve">
    <value>Specifies that an e-mail message header shall be displayed when this document is opened, if an e-mail header is supported by the application opening the file.</value>
  </data>
  <data name="ShowXmlTags" xml:space="preserve">
    <value>Specifies that some visual indicator shall be provided for the start and end locations of custom XML markup present in this document, if any.</value>
  </data>
  <data name="StrictFirstAndLastChars" xml:space="preserve">
    <value>Specifies that the strict set of Kinsoku rules shall be applied to Japanese text in this document when the kinsoku element (§17.3.1.16) is applied to that text. The resulting line breaking rules are provided on the kinsoku element.</value>
  </data>
  <data name="StyleLockStylesPart" xml:space="preserve">
    <value>Specifies whether applications shall prevent the replacement of the complete set of styles stored in the Styles part when editing this document. This setting should not preclude the editing or removal of individual styles, instead, it should only prevent the removal and replacement of the entire styles part in a single operation (either through a user interface or a programmatic operation).</value>
  </data>
  <data name="StyleLockThemesPart" xml:space="preserve">
    <value>Specifies whether applications shall prevent the modification of the document's theme information stored in the Theme part when editing this document. This setting should not preclude the use of the theme information, instead, it should only prevent the modification of the theme part in a single operation (either through a user interface or a programmatic operation).</value>
  </data>
  <data name="StylePaneFormatFilter" xml:space="preserve">
    <value>Specifies a sorting which should be applied to the list of styles in this document if the styles are displayed in a user interface.</value>
  </data>
  <data name="StylePaneSortMethods" xml:space="preserve">
    <value>Specifies a sorting which should be applied to the list of styles in this document if the styles are displayed in a user interface.</value>
  </data>
  <data name="SummaryLength" xml:space="preserve">
    <value>Specifies the size for automatic document summaries performed on the content of a WordprocessingML document. An automatic document summary is a subset of text contained in a document deemed by the hosting application to summarize the content of the WordprocessingML document. The val attribute of this element specifies the size of an automatic document summary to be performed on a given WordprocessingML document as a percentage of the total size of the given WordprocessingML document. Performing an automatic document summary is a runtime operation outside the scope of IEEE/IEC 29500.</value>
  </data>
  <data name="ThemeFontLanguages" xml:space="preserve">
    <value>Specifies the language which shall be used to determine the appropriate theme fonts in the document's Theme part which map to the major/minor theme fonts. Specifically, the bidi attribute is used to determine the theme font applied to complex script text, the eastAsia attribute is used to determine the theme font applied to East Asian text, and the val attribute is used to determine the theme font applied to all other text.</value>
  </data>
  <data name="TrackRevisions" xml:space="preserve">
    <value>Specifies that applications shall track revisions made to the WordprocessingML document. Revisions are changes to a WordprocessingML document which are recorded such that they can be viewed independently, accepted or removed, and reverted if needed. When revisions are tracked, the resulting WordprocessingML markup in the Revisions subclause of this document describes the necessary syntax.</value>
  </data>
  <data name="UICompatibleWith97To2003" xml:space="preserve">
    <value>Disables features incompatible with earlier word processing formats.</value>
  </data>
  <data name="UpdateFieldsOnOpen" xml:space="preserve">
    <value>Specifies whether the fields contained in this document should automatically have their field result recalculated from the field codes when this document is opened by an application which supports field calculations. &lt;p/&gt;Note: Some fields are always recalculated (e.g. the page numbering), therefore this element only affects fields which are typically not automatically recalculated on opening the document. Also note that this setting must not supersede any document protection (§17.15.1.29) or write protection (§17.15.1.93) settings.</value>
  </data>
  <data name="UseXsltWhenSaving" xml:space="preserve">
    <value>Specifies that this document should be saved through the custom XSLT transform defined by the saveThroughXslt element (§17.15.1.76) in this document when it is saved as a single XML file (not defined by IEEE/IEC 29500). &lt;p/&gt;Guidance: Because this setting specifies behavior when saving to an alternative file format not defined by IEEE/IEC 29500, this behavior is optional. &lt;p/&gt;If the saveXmlDataOnly element (§17.15.1.77) is specified, then the single XML file to be transformed is the custom XML markup of the document, otherwise, it a format outside the scope of IEEE/IEC 29500. If the XSL transform specified by the saveThroughXslt element is not present, then this setting should be ignored.</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>Specifies the manner in which the contents of this document should be displayed when opened by an application.</value>
  </data>
  <data name="WriteProtection" xml:space="preserve">
    <value>Specifies the write protection settings which have been applied to a WordprocessingML document. Write protection refers to a mode in which the document's contents cannot be edited, and the document cannot be resaved using the same file name. This setting is independent of the documentProtection (§17.15.1.29) element, but like document protection, this setting is not intended as a security feature and can be ignored.&lt;p/&gt;When present, the write protection shall result in one of two write protection behaviors:&lt;p/&gt;• If the password attribute is present, or both attributes are omitted, then the application shall prompt for a password to exit write protection. If the supplied password does not match the hash value in this attribute, then write protection shall be enabled.&lt;p/&gt;• If only the recommended attribute is present, the application should provide user interface recommending that the user open this document in write protected state. If the user chooses to do so, the document shall be write protected, otherwise, it shall be opened fully editable.</value>
  </data>
  <data name="Zoom" xml:space="preserve">
    <value>Specifies the magnification level which should be applied to a document when it is displayed by an application. The zoom level is specified with the use of two attributes stored on this element:&lt;p/&gt;• val, which stores the type of zoom applied to the document&lt;p/&gt;• percent, which stores the zoom percentage to be used when rendering the document&lt;p/&gt;If both attributes are present, then the percent attribute shall be treated as a 'cached' value and only used when the value none is specified for the val attribute.&lt;p/&gt;</value>
  </data>
  <data name="AlgorithmIdExtensibility" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="AlgorithmIdExtensibilitySource" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="AlgorithmName" xml:space="preserve">
    <value>Specifies the specific cryptographic hashing algorithm which shall be used along with the salt attribute and input password in order to compute the hash value.</value>
  </data>
  <data name="CryptographicAlgorithmClass" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="CryptographicAlgorithmSid" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="CryptographicAlgorithmType" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="CryptographicProvider" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="CryptographicProviderType" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="CryptographicProviderTypeExtensibility" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="CryptographicProviderTypeExtSource" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="CryptographicSpinCount" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Specifies the set of editing restrictions which shall be enforced on a given WordprocessingML document.</value>
  </data>
  <data name="Enforcement" xml:space="preserve">
    <value>Specifies if the document protection settings shall be enforced for a given WordprocessingML document. If the value of this element is off, 0, or false, all the WordprocessingML pertaining to document protection is still preserved in the document, but is not enforced. If the value of this element is on, 1, or true, the document protection is enforced.</value>
  </data>
  <data name="Formatting" xml:space="preserve">
    <value>Specifies if formatting restrictions are in effect for a given WordprocessingML document. This enables the document to restrict the types of styles that can exist in a given WordprocessingML document. Specifically, by setting this attribute's value equal to true, every style whose locked element (§17.7.4.7) has a value of true (or latent styles (§17.7.4.5) whose locked attribute is true) shall not be available for use in the application, nor should any direct formatting. Only styles with a locked value of false can be used.</value>
  </data>
  <data name="Hash" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="HashValue" xml:space="preserve">
    <value>Specifies the hash value for the password stored with this document. This value shall be compared with the resulting hash value after hashing the user-supplied password using the algorithm specified by the preceding attributes and parent XML element, and if the two values match, the protection shall no longer be enforced.</value>
  </data>
  <data name="Salt" xml:space="preserve">
    <value>Obsolete property</value>
  </data>
  <data name="SaltValue" xml:space="preserve">
    <value>Specifies the salt which was prepended to the user-supplied password before it was hashed using the hashing algorithm defined by the preceding attribute values to generate the hashValue attribute, and which shall also be prepended to the user-supplied password before attempting to generate a hash value for comparison. A salt is a random string which is added to a user-supplied password before it is hashed in order to prevent a malicious party from pre-calculating all possible password/hash combinations and simply using those pre-calculated values (often referred to as a "dictionary attack").</value>
  </data>
  <data name="SpinCount" xml:space="preserve">
    <value>Specifies the number of times the hashing function shall be iteratively run (runs using each iteration's result plus a 4 byte value (0-based, little endian) containing the number of the iteration as the input for the next iteration) when attempting to compare a user-supplied
password with the value stored in the hashValue attribute.</value>
  </data>
</root>