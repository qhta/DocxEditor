<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DocxControls"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    >
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/DocxControls;component/Views/CustomToolTipStyle.xaml"/>
    <ResourceDictionary Source="pack://application:,,,/DocxControls;component/Views/CustomComboBoxStyle.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <Thickness x:Key="PropertyPadding">5,0,0,0</Thickness>
  <local:PropertyValueConverter x:Key="PropertyValueConverter" />

  <DataTemplate x:Key="TextTemplate" DataType="local:PropertyViewModel" >
    <xctk:WatermarkTextBox 
      Text="{Binding Value, Converter={StaticResource PropertyValueConverter}, UpdateSourceTrigger=LostFocus}" 
      Watermark="{Binding Watermark}"
      IsReadOnly="{Binding IsReadOnly}"
      Padding="{StaticResource PropertyPadding}">
      <TextBox.Style>
        <Style TargetType="TextBox">
          <Setter Property="BorderThickness" Value="0" />
          <!--<EventSetter Event="PreviewKeyDown" Handler="{x:Static local:EventHandlers.PreviewKeyDown}"/>-->
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
              <Setter Property="Foreground" Value="Gray"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </TextBox.Style>
      <!--<TextBox.InputBindings>
        <KeyBinding Key="Enter" Command="{x:Static local:Executables.EnterKeyCommand}" />
      </TextBox.InputBindings>-->
    </xctk:WatermarkTextBox>
  </DataTemplate>

  <DataTemplate x:Key="NemMemberTextTemplate" DataType="local:PropertyViewModel" >
    <xctk:WatermarkTextBox 
      Text="{Binding DataContext.ObjectViewModel.ObjectMembers.NewMemberValue, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=TwoWay, Converter={StaticResource PropertyValueConverter}, UpdateSourceTrigger=LostFocus}" 
      Watermark="{Binding Watermark}"
      IsReadOnly="{Binding IsReadOnly}"
      Padding="{StaticResource PropertyPadding}">
      <TextBox.Style>
        <Style TargetType="TextBox">
          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="Foreground" Value="Red"/>
          <!--<EventSetter Event="PreviewKeyDown" Handler="{x:Static local:EventHandlers.PreviewKeyDown}"/>-->
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
              <Setter Property="Foreground" Value="Gray"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </TextBox.Style>
      <!--<TextBox.InputBindings>
        <KeyBinding Key="Enter" Command="{x:Static local:Executables.EnterKeyCommand}" />
      </TextBox.InputBindings>-->
    </xctk:WatermarkTextBox>
  </DataTemplate>
  <DataTemplate x:Key="CheckBoxTemplate" DataType="local:PropertyViewModel">
    <CheckBox 
       IsChecked="{Binding AsBoolean, UpdateSourceTrigger=PropertyChanged}"
       IsThreeState="{Binding IsThreeState}"
       Margin="{StaticResource PropertyPadding}"/>
  </DataTemplate>
  <DataTemplate x:Key="ComboBoxTemplate" DataType="local:PropertyViewModel">
    <ComboBox 
       SelectedValue="{Binding SelectedEnum, UpdateSourceTrigger=PropertyChanged}"
       ItemsSource="{Binding EnumValues}"
       DisplayMemberPath="Caption"
       SelectedValuePath="Value"
       Padding="{StaticResource PropertyPadding}">
    </ComboBox>
  </DataTemplate>
  <DataTemplate x:Key="CheckBoxComboBoxTemplate" DataType="local:PropertyViewModel">
    <local:CheckBoxComboBox 
       Text="{Binding SelectedEnum, Converter={StaticResource PropertyValueConverter},
       UpdateSourceTrigger=PropertyChanged}"
       ItemsSource="{Binding EnumValues}"
       DisplayMemberPath="Caption"
       SelectedValuePath="Value"
       Padding="{StaticResource PropertyPadding}">
    </local:CheckBoxComboBox>
  </DataTemplate>
  <DataTemplate x:Key="ObjectViewComboBoxTemplate" DataType="local:PropertyViewModel">
    <local:ObjectViewComboBox 
       Text="{Binding ObjectViewModel.ModeledObject, Converter={StaticResource PropertyValueConverter},
       UpdateSourceTrigger=Default}"
       ItemsSource="{Binding ObjectViewModel.ObjectProperties}"
       >
    </local:ObjectViewComboBox>
  </DataTemplate>
  <local:PropertyValueTemplateSelector 
     x:Key="PropertyValueTemplateSelector"
     TextTemplate="{StaticResource TextTemplate}"
     CheckBoxTemplate="{StaticResource CheckBoxTemplate}" 
     ComboBoxTemplate="{StaticResource ComboBoxTemplate}"
     FlagsComboBoxTemplate="{StaticResource CheckBoxComboBoxTemplate}"
     ObjectViewComboBoxTemplate="{StaticResource ObjectViewComboBoxTemplate}"
     NewMemberValueTemplate="{StaticResource NemMemberTextTemplate}"
     />

  <DataTemplate x:Key="PropertyCaptionTemplate" DataType="local:PropertyViewModel" >
    <TextBlock 
       Text="{Binding Caption}" 
       Padding="{StaticResource PropertyPadding}">
      <TextBlock.Style>
        <Style TargetType="TextBlock">
          <Setter Property="Background" Value="Silver"/>
          <Setter Property="Foreground" Value="Black"/>
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsObsolete}" Value="True">
              <Setter Property="Foreground" Value="DarkSlateGray"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </TextBlock.Style>
      <TextBlock.ToolTip>
        <ToolTip  Style="{StaticResource CustomToolTipStyle}">
          <local:CustomToolTipView
             DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ToolTip}}" />
        </ToolTip>
      </TextBlock.ToolTip>
    </TextBlock>
  </DataTemplate>

  <DataTemplate x:Key="ObjectTypeNameTemplate" DataType="local:ObjectViewModel" >
    <TextBlock 
      Text="{Binding ObjectTypeName}" 
      Padding="{StaticResource PropertyPadding}">
      <TextBlock.Style>
        <Style TargetType="TextBlock">
          <Setter Property="Background" Value="Silver"/>
          <Setter Property="Foreground" Value="Black"/>
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsObsolete}" Value="True">
              <Setter Property="Foreground" Value="DarkSlateGray"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </TextBlock.Style>
      <TextBlock.ToolTip>
        <ToolTip  Style="{StaticResource CustomToolTipStyle}">
          <local:CustomToolTipView
            DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ToolTip}}" />
        </ToolTip>
      </TextBlock.ToolTip>
    </TextBlock>
  </DataTemplate>


  <DataTemplate x:Key="NewMemberTypeTemplate" DataType="local:ObjectMemberViewModel">
    <ComboBox
      SelectedValue="{Binding DataContext.ObjectViewModel.ObjectMembers.NewMemberType, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
      ItemsSource="{Binding DataContext.ObjectViewModel.ObjectMembers.MemberTypes, RelativeSource={RelativeSource AncestorType=DataGrid}}"
      DisplayMemberPath="Name"
      Padding="{StaticResource PropertyPadding}">
    </ComboBox>
  </DataTemplate>

  <local:PropertyCaptionTemplateSelector 
    x:Key="PropertyCaptionTemplateSelector"
    CaptionTemplate="{StaticResource PropertyCaptionTemplate}"
    ObjectTemplate="{StaticResource ObjectTypeNameTemplate}"
    NewMemberTypeTemplate="{StaticResource NewMemberTypeTemplate}"
  />
</ResourceDictionary>
